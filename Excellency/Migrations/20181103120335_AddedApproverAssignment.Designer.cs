// <auto-generated />
using System;
using Excellency.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Excellency.Migrations
{
    [DbContext(typeof(EASDbContext))]
    [Migration("20181103120335_AddedApproverAssignment")]
    partial class AddedApproverAssignment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Excellency.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId");

                    b.Property<int?>("CompanyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsChangedPassword");

                    b.Property<bool>("IsDeactivated");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsExpired");

                    b.Property<bool>("IsLocked");

                    b.Property<bool>("IsVerified");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int?>("PositionId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Excellency.Models.ApproverAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApproverId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("UserId");

                    b.ToTable("ApproverAssignments");
                });

            modelBuilder.Entity("Excellency.Models.BehavioralFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("BehavioralFactors");
                });

            modelBuilder.Entity("Excellency.Models.BehavioralFactorItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BehavioralFactorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("BehavioralFactorId");

                    b.ToTable("BehavioralFactorItems");
                });

            modelBuilder.Entity("Excellency.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Excellency.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("SuccessIndicatorId");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("SuccessIndicatorId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Excellency.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500);

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Excellency.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Excellency.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId");

                    b.Property<int?>("CategoryId");

                    b.Property<int?>("CompanyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int?>("EmployeeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAssignments");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeBehavioralAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BehavioralFactorId");

                    b.Property<int?>("EmployeeAssignmentId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.HasIndex("BehavioralFactorId");

                    b.HasIndex("EmployeeAssignmentId");

                    b.ToTable("EmployeeBehavioralAssignments");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCategories");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeKRAAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeAssignmentId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("KeyResultAreaId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeAssignmentId");

                    b.HasIndex("KeyResultAreaId");

                    b.ToTable("EmployeeKRAAssignments");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeRaterHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("RaterId");

                    b.HasKey("Id");

                    b.HasIndex("RaterId");

                    b.ToTable("RaterHeader");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeRaterLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId");

                    b.Property<int?>("EmployeeRaterId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeRaterId");

                    b.ToTable("RaterLine");
                });

            modelBuilder.Entity("Excellency.Models.EvaluationHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedDate");

                    b.Property<int?>("ApproverId");

                    b.Property<string>("ApproverRemarks");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("KeyResultAreaId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<DateTime>("PostedDate");

                    b.Property<int?>("RateeId");

                    b.Property<int?>("RaterId");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("KeyResultAreaId");

                    b.HasIndex("RateeId");

                    b.HasIndex("RaterId");

                    b.HasIndex("StatusId");

                    b.ToTable("EvaluationHeader");
                });

            modelBuilder.Entity("Excellency.Models.EvaluationLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int?>("EvaluationHeaderId");

                    b.Property<int?>("RatingTableItemId");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("SuccessIndicatorId");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationHeaderId");

                    b.HasIndex("RatingTableItemId");

                    b.HasIndex("SuccessIndicatorId");

                    b.ToTable("EvaluationLine");
                });

            modelBuilder.Entity("Excellency.Models.EvaluationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsOpen");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Title");

                    b.Property<int>("YearCovered");

                    b.HasKey("Id");

                    b.ToTable("EvaluationSettings");
                });

            modelBuilder.Entity("Excellency.Models.KeyResultArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.ToTable("KeyResultAreas");
                });

            modelBuilder.Entity("Excellency.Models.KeySuccessIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("KeyResultAreaId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("RatingTableId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("KeyResultAreaId");

                    b.HasIndex("RatingTableId");

                    b.ToTable("KeySuccessIndicators");
                });

            modelBuilder.Entity("Excellency.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Excellency.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Excellency.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Excellency.Models.RatingBehavioralFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BehavioralFactorId");

                    b.Property<int?>("BehavioralFactorItemId");

                    b.Property<string>("Comment");

                    b.Property<int?>("RatingHeaderId");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("BehavioralFactorId");

                    b.HasIndex("BehavioralFactorItemId");

                    b.HasIndex("RatingHeaderId");

                    b.ToTable("RatingBehavioralFactors");
                });

            modelBuilder.Entity("Excellency.Models.RatingHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedDate");

                    b.Property<int?>("ApproverId");

                    b.Property<string>("ApproverRemarks");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsExpired");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<DateTime>("PostedDate");

                    b.Property<int?>("RateeId");

                    b.Property<int?>("RaterId");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("StatusId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("RateeId");

                    b.HasIndex("RaterId");

                    b.HasIndex("StatusId");

                    b.ToTable("RatingHeader");
                });

            modelBuilder.Entity("Excellency.Models.RatingKeySuccessArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int?>("KeyResultAreaId");

                    b.Property<int?>("KeySuccessIndicatorId");

                    b.Property<int?>("RatingHeaderId");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("KeyResultAreaId");

                    b.HasIndex("KeySuccessIndicatorId");

                    b.HasIndex("RatingHeaderId");

                    b.ToTable("RatingKeySuccessAreas");
                });

            modelBuilder.Entity("Excellency.Models.RatingTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("RatingTables");
                });

            modelBuilder.Entity("Excellency.Models.RatingTableItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("RatingTableId");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("RatingTableId");

                    b.ToTable("RatingTableItems");
                });

            modelBuilder.Entity("Excellency.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Excellency.Models.RoleModulesHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleModulesHeader");
                });

            modelBuilder.Entity("Excellency.Models.RoleModulesLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approve");

                    b.Property<bool>("Delete");

                    b.Property<bool>("Export");

                    b.Property<bool>("Import");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModuleId");

                    b.Property<bool>("New");

                    b.Property<bool>("Post");

                    b.Property<bool>("Print");

                    b.Property<int?>("RoleModulesHeaderId");

                    b.Property<bool>("Save");

                    b.Property<bool>("Search");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("RoleModulesHeaderId");

                    b.ToTable("RoleModulesLine");
                });

            modelBuilder.Entity("Excellency.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Excellency.Models.UserRoleHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("UserRoleHeader");
                });

            modelBuilder.Entity("Excellency.Models.UserRoleLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpireDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("RoleHeaderId");

                    b.Property<int?>("RoleId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("RoleHeaderId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoleLine");
                });

            modelBuilder.Entity("Excellency.Models.Account", b =>
                {
                    b.HasOne("Excellency.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Excellency.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Excellency.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Excellency.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("Excellency.Models.ApproverAssignment", b =>
                {
                    b.HasOne("Excellency.Models.Account", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Excellency.Models.Account", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Excellency.Models.BehavioralFactor", b =>
                {
                    b.HasOne("Excellency.Models.EmployeeCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Excellency.Models.BehavioralFactorItem", b =>
                {
                    b.HasOne("Excellency.Models.BehavioralFactor", "BehavioralFactor")
                        .WithMany()
                        .HasForeignKey("BehavioralFactorId");
                });

            modelBuilder.Entity("Excellency.Models.Branch", b =>
                {
                    b.HasOne("Excellency.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("Excellency.Models.Category", b =>
                {
                    b.HasOne("Excellency.Models.KeySuccessIndicator", "SuccessIndicator")
                        .WithMany()
                        .HasForeignKey("SuccessIndicatorId");
                });

            modelBuilder.Entity("Excellency.Models.Employee", b =>
                {
                    b.HasOne("Excellency.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Excellency.Models.EmployeeCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Excellency.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Excellency.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Excellency.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeAssignment", b =>
                {
                    b.HasOne("Excellency.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeBehavioralAssignment", b =>
                {
                    b.HasOne("Excellency.Models.BehavioralFactor", "BehavioralFactor")
                        .WithMany()
                        .HasForeignKey("BehavioralFactorId");

                    b.HasOne("Excellency.Models.EmployeeAssignment", "EmployeeAssignment")
                        .WithMany()
                        .HasForeignKey("EmployeeAssignmentId");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeKRAAssignment", b =>
                {
                    b.HasOne("Excellency.Models.EmployeeAssignment", "EmployeeAssignment")
                        .WithMany()
                        .HasForeignKey("EmployeeAssignmentId");

                    b.HasOne("Excellency.Models.KeyResultArea", "KeyResultArea")
                        .WithMany()
                        .HasForeignKey("KeyResultAreaId");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeRaterHeader", b =>
                {
                    b.HasOne("Excellency.Models.Account", "Rater")
                        .WithMany()
                        .HasForeignKey("RaterId");
                });

            modelBuilder.Entity("Excellency.Models.EmployeeRaterLine", b =>
                {
                    b.HasOne("Excellency.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Excellency.Models.EmployeeRaterHeader", "EmployeeRater")
                        .WithMany()
                        .HasForeignKey("EmployeeRaterId");
                });

            modelBuilder.Entity("Excellency.Models.EvaluationHeader", b =>
                {
                    b.HasOne("Excellency.Models.Account", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Excellency.Models.KeyResultArea", "KeyResultArea")
                        .WithMany()
                        .HasForeignKey("KeyResultAreaId");

                    b.HasOne("Excellency.Models.Employee", "Ratee")
                        .WithMany()
                        .HasForeignKey("RateeId");

                    b.HasOne("Excellency.Models.Account", "Rater")
                        .WithMany()
                        .HasForeignKey("RaterId");

                    b.HasOne("Excellency.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Excellency.Models.EvaluationLine", b =>
                {
                    b.HasOne("Excellency.Models.EvaluationHeader", "EvaluationHeader")
                        .WithMany()
                        .HasForeignKey("EvaluationHeaderId");

                    b.HasOne("Excellency.Models.RatingTableItem", "RatingTableItem")
                        .WithMany()
                        .HasForeignKey("RatingTableItemId");

                    b.HasOne("Excellency.Models.KeySuccessIndicator", "SuccessIndicator")
                        .WithMany()
                        .HasForeignKey("SuccessIndicatorId");
                });

            modelBuilder.Entity("Excellency.Models.KeySuccessIndicator", b =>
                {
                    b.HasOne("Excellency.Models.KeyResultArea", "KeyResultArea")
                        .WithMany()
                        .HasForeignKey("KeyResultAreaId");

                    b.HasOne("Excellency.Models.RatingTable", "RatingTable")
                        .WithMany()
                        .HasForeignKey("RatingTableId");
                });

            modelBuilder.Entity("Excellency.Models.RatingBehavioralFactor", b =>
                {
                    b.HasOne("Excellency.Models.BehavioralFactor", "BehavioralFactor")
                        .WithMany()
                        .HasForeignKey("BehavioralFactorId");

                    b.HasOne("Excellency.Models.BehavioralFactorItem", "BehavioralFactorItem")
                        .WithMany()
                        .HasForeignKey("BehavioralFactorItemId");

                    b.HasOne("Excellency.Models.RatingHeader", "RatingHeader")
                        .WithMany()
                        .HasForeignKey("RatingHeaderId");
                });

            modelBuilder.Entity("Excellency.Models.RatingHeader", b =>
                {
                    b.HasOne("Excellency.Models.Account", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("Excellency.Models.Employee", "Ratee")
                        .WithMany()
                        .HasForeignKey("RateeId");

                    b.HasOne("Excellency.Models.Account", "Rater")
                        .WithMany()
                        .HasForeignKey("RaterId");

                    b.HasOne("Excellency.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Excellency.Models.RatingKeySuccessArea", b =>
                {
                    b.HasOne("Excellency.Models.KeyResultArea", "KeyResultArea")
                        .WithMany()
                        .HasForeignKey("KeyResultAreaId");

                    b.HasOne("Excellency.Models.KeySuccessIndicator", "KeySuccessIndicator")
                        .WithMany()
                        .HasForeignKey("KeySuccessIndicatorId");

                    b.HasOne("Excellency.Models.RatingHeader", "RatingHeader")
                        .WithMany()
                        .HasForeignKey("RatingHeaderId");
                });

            modelBuilder.Entity("Excellency.Models.RatingTableItem", b =>
                {
                    b.HasOne("Excellency.Models.RatingTable", "RatingTable")
                        .WithMany()
                        .HasForeignKey("RatingTableId");
                });

            modelBuilder.Entity("Excellency.Models.RoleModulesHeader", b =>
                {
                    b.HasOne("Excellency.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Excellency.Models.RoleModulesLine", b =>
                {
                    b.HasOne("Excellency.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.HasOne("Excellency.Models.RoleModulesHeader", "RoleModulesHeader")
                        .WithMany()
                        .HasForeignKey("RoleModulesHeaderId");
                });

            modelBuilder.Entity("Excellency.Models.UserRoleHeader", b =>
                {
                    b.HasOne("Excellency.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("Excellency.Models.UserRoleLine", b =>
                {
                    b.HasOne("Excellency.Models.UserRoleHeader", "RoleHeader")
                        .WithMany()
                        .HasForeignKey("RoleHeaderId");

                    b.HasOne("Excellency.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
