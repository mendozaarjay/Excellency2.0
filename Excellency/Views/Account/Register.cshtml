@model Excellency.ViewModels.AccountRegisterViewModel
@{
    ViewData["Title"] = "User Register";
}

<div class="panel panel-headline">
    <div class="panel-heading">
        <h3>Account Registration</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm("Register", "Account"))
        {

        <div class="row">
            <input type="hidden" name="id" id="id" value="0" />
            @if (Html.ViewData.ModelState.ErrorCount > 0)
            {
                <div class="alert alert-danger alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @Html.ValidationSummary(false,"",new {@class = "text-danger"})
                </div>
            }
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="employeeno">Employee No</label>
                        @Html.TextBoxFor(m => m.EmployeeNo, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label for="firstname">Username</label>
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="firstname">First name</label>
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label for="middlename">Middle name</label>
                        @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label for="lastname">Last name</label>
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" class="form-control" id="password" placeholder="Password" name="Password">
                    </div>
                    <div class="form-group">
                        <label for="confirmpassword">Confirm Password</label>
                        <input type="password" class="form-control" id="confirmpassword" placeholder="Confirm Password" name="ConfirmPassword">
                    </div>



                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Company)
                        @Html.DropDownListFor(m => m.Company, Model.Companies, "- Select Company -", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Branch)
                        @Html.DropDownListFor(m => m.Branch, Model.Branches, "- Select Branch -", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Department)
                        @Html.DropDownListFor(m => m.Department, Model.Departments, "- Select Department -", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Position)
                        @Html.DropDownListFor(m => m.Position, Model.Positions, "- Select Position -", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Category)
                        @Html.DropDownListFor(m => m.Category, Model.Categories, "- Select Category -", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="Types">User Type</label>
                        @*<select multiple class="chosen-select form-control" data-placeholder="--Select Here--" name="types" id="types" data-val="true" data-val-required="User type is required.">
                            @foreach (var item in Model.UserTypes)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>*@
                        @Html.DropDownListFor(m => m.Types, Model.UserTypes, new { @multiple ="multiple",@class="chosen-select form-control" })

                    </div>
                </div>
        </div>
            <div class="form-group">
                <button type="button" class="btn btn-default">Cancel</button>
                <button type="submit" class="btn btn-primary">Register Account</button>
            </div>
        }
    </div>
</div>

@section Scripts{ 
    <script type="text/javascript">
        $(function () {

            $(".chosen-select").chosen();
            $('#Types').attr('data-placeholder', '--Select Here--');
            $('#Types').trigger('chosen:updated');
        });

        $('#Company').change(function () {
            var item = $('#Company').val();
            $('#Branch').empty();

            if (item.length > 0) {
                $.ajax({
                    url: '/Account/GetBranches',
                    datatype: "json",
                    type: 'GET',
                    async: true,
                    data: { "id": item },
                    success: function (data) {
                        var len = data.result.length;
                        for (var i = 0; i < len; i++) {
                            var code = data.result[i]["value"];
                            var description = data.result[i]["text"];
                            $('#Branch').append("<option value ='" + code + "'>" + description + "</option>");
                        }
                        $('#Branch').val('');
                    }
                })
            }
        });
    </script>
}